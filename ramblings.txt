wordplay
  input word and it gives rhymes, similar words, puns...
  alliteration
  "bars" for lyrics
  find nearest word phonemes given other phonemes, e.g. "rise" and "rice"
  attempt to pronounce non-words (e.g. license plates)
  puns (find overlap between words, e.g. pun+funny => punny - use to make "startup" names)
  generate mispelled words (take regular word, then note how phonemes can be spelled, e.g. replace "f" with "gh" as in "rough" => "rouff" => "ruff")
  figure out how to make a {phoneme: [...possible spellings]} and VV, e.g. {f: ["f", "gh"]}
  find words inside other words, like "I need a" in "Anita"
  play with suffixes/prefixes to words, like "go" and "un-go", when we have explicit words like "stop", or "upload" and "unload", where we assume a prefix like "up" in "upload" (taking the first syllable)
shape manipulation (orbit object, scale, move around... - 'z' to toggle maipulation modes)
SFX (make wind or ocean sound by making the similar sound)
Make up a language? (custom phonemes, words, morphology, syntax, lexicon)
Scrabble, but with phonemes?
use markov chain to not only mkae up giberish, but convert it back to english (mapping from english characters/strings to phonemes, e.g. "ch" maps to that "tj" symbol, or simple r to r, where you can give it a random word and it can predict how to pronounce it, e.g. chophouse, being cho-pho-use vs chop-house) - can also make up english words using a markov chain and guess the pronunciation

Grapheme Algorithm
  an algorithm where given a {word: [...phonemes]} dictionary, figure out a substitution where for each phoneme, figure all the possible graphemes it can produce, e.g. 'θ' can produce "th", but generative from the lexicon
  each phoneme may produce multiple graphemes, but multiple phonemes may produce a single letter
  can can start with an empty {phoneme: [...productions]}, and for each new word add all the possible partitions of the word (and link the original word it came from), looking for similar examples. after the entire dictionary is parsed trim all the productions that only appear once

NICE TO HAVES
  wordplay
    note overlapping words (the end of one word matches the beginning of another), e.g. apple+please => applease
    phonetic anagrams
    freudian slip - can blend the word you were gonna say with the actual word to say, interrupting to fix yourself - can also just mix words in general with pauses to correct, adding "I mean"
    given 2 languages, one can make a sentence that means something in both languages (both are valid words) - can even type in one sentence and change the words to synonyms that mean something
    phoneme lookup (type word and it shows the phonemes) - can "type in phonemes" by typing in the word and using the number keys to select which phoneme to use
    misheard lyrics and bad lip reasings (text to phonemes, phonemes to visemes, visemes back to phonemes, and back to words)
    invent languages (can use a markov chain or [...phoneme substrings] rules/constraints to determine what should be used or avoided), generating a lexicon. Can create a dictionary mapping english words to the new language's words (use as reference to make new words, or act as the root for similar words), or set a "length" (and phonetic constraints) for certain words, generating words of certain lengths to give emphasis to "more important" words, like how "mom" tends to be the shortest and use the simplest phonemes so babies can say it. Can create a "phoneme regex" to generate these languages, and even setup morphology/syntax to induce a certain pattern of speaking (how it sounds, as well as how long certain sentiments can sound)

    use markov chain to find regex of a language (tendencies of phonetic strings), then figure difficult or easy sentences (whatever the most likely phoneme to follow, find the least likely phoneme to follow)
    given a sentence, find a similar sentence using different words (the last amount of phoneme changes to make a comletely different sentence) - similar to eminem's lyrics
    phoneme placeholders, where a phoneme can be generalized (z/s, generalizing voiceness), specify a consonant or vowel, or just a blank phoneme where gaps are filled, e.g. "a_l" can be "apple" or "at all" or...you get the idea - can be interesting for alliteration... - can have consonants and it fills the blanks with vowels, e.g. "_m_n" can be "simon" or "rhymin'" or "omen"...
    regex-like phoneme patterns, generating words/utterances following the pattern, e.g. alternating vowels/consonants to avoid consonant clusters
  pronunciation
    eye-tracking to "read" words and they're spoken aloud
  Phoneme Recognition
    detect accents or impressions, and use it to change the vocal tract (sound more like a man or woman, or like a child or old person when "speaking like them"), or change avatar appearance (different ways of speaking can morph your avatar into that particular "persona", kinda like the Genie from Aladdin), or even change the environment (add sound effects or background music like in Spongebob or Ed, Edd, and Eddy, or can change the 3D scene around you, or even props in your hand...)
  knn
    "include in training" checkboxes for /knn classes (can "mute" some classes, or "solo" others)
    checkboxes to send to PT/game/robot/etc in /knn 
  tts
    phonetic keyboard (typing in phoneme textarea takes the actual letter and converts it, e.g. "f" turns to "f" as expected, but "th" turns to θ, using "enter" to finish it, sorta like typing on an old phone)
    emotion (happy, sad, sarcastic, etc)
    "filter" button (takes phonemes and replace with similar phonemes, like a substitution button you can re-press multiple times like re-doing image filters), e.g. "blur", "mumble", etc
    contrast in phonetic substitutions (find constriction differences between 2 versions of a single word, and exaggerate the difference in one direction, e.g. a british english mocking an american english accent or vv, where you can hear how different accents perceive each other)
    smooth-out phonemes, e.g. "is this" => "iz zis", where the sudden change of voice/voiceless smooths out, or tongue-twisters that alternate between similar phonemes "really likes" to "lilly rikes", switching particular phonemes
    similar words (get phonetic difference between words, and calculate distance between phonemes by constriction values), and syllables/rhymes (use same number of syllables to make a new "bar"), and apply autocorrect?
    blank keys for song placeholders (retain syllables and fill in phonemes (or phoneme classes/rhymes, or sub-phrases like regex for phonemes) - useful for songs or setting words to a beat)
    for consonants like h/k/m, use the next vowel to determine where to put the tongue
    speed can affect the phonemes (speaking slowly "over-anunciates", and quickly removes phonemes)
    can add "umms" randomly, or mix up phonemes, e.g. "downstairs" to "sound-dairs"
    find "cross-homophones", where mapping the english.txt through a phonetic substitution/accent can be interpreted as a different word in the orignal voice, e.g. "keys" can sound like "kiss" when sounding...italian?
    drop phonemes if the end of one word is the same/similar to the next, e.g. "next time" to "necks I'm"
    pronounce things literally, e.g. "store" as "story" because it ends in "e" (like how children read stuff incorrectly because of arbitrary rules), or "th" in Thomas instead of saying it like "Tomas"
    Pronunciation like commas, which change the pitch temporarily (The ball, which is red, bounced), or a question mark can change inflection of the last word
    given multiple languages, one can map a word in one language to its phonemes, and then to another language's words (or find the closest words in the other language to see how it can be interpreted) - can be useful to see how words can be interpreted by others who don't know (or make double meaning if bilingual)
    Use syntax to break a sentence down into a tree, figuring which words to emphasize (e.g. the subject of a sentence), and adding the ability to map poses in animation to certain words that can be re-ordered when translated to different languages with different word order - can also add typography to the words for simpler emphasis (bold, italic, underline, color), which can affect the pitch, speed, duration...
    breath duration (will become more voiceless/hoarse and raise in pitch the longer you go without pausing (will have a little "gasp" for breath utterance))
    talking fast may remove the last part/consonant of a word, e.g. "I'm talking really fast" to "I ta'in rea fas"
    slider to interpolate timeline
    play in reverse
    import keyframes
